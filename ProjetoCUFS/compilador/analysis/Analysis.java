/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.analysis;

import compilador.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTEnquanto(TEnquanto node);
    void caseTPara(TPara node);
    void caseTAvalie(TAvalie node);
    void caseTCaso(TCaso node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTFalso(TFalso node);
    void caseTString(TString node);
    void caseTTipointeiro(TTipointeiro node);
    void caseTTiporeal(TTiporeal node);
    void caseTTipocaractere(TTipocaractere node);
    void caseTTipobooleano(TTipobooleano node);
    void caseTPontoevirgula(TPontoevirgula node);
    void caseTFechablococomentario(TFechablococomentario node);
    void caseTAbreblococomentario(TAbreblococomentario node);
    void caseTDoispontos(TDoispontos node);
    void caseTComentariosimples(TComentariosimples node);
    void caseTLparentese(TLparentese node);
    void caseTRparentese(TRparentese node);
    void caseTLcolchete(TLcolchete node);
    void caseTRcolchete(TRcolchete node);
    void caseTLchave(TLchave node);
    void caseTRchave(TRchave node);
    void caseTAtrib(TAtrib node);
    void caseTNovalinha(TNovalinha node);
    void caseTVazio(TVazio node);
    void caseTTab(TTab node);
    void caseTRn(TRn node);
    void caseTId(TId node);
    void caseTInteiro(TInteiro node);
    void caseTReal(TReal node);
    void caseTMaiorq(TMaiorq node);
    void caseTMenorq(TMenorq node);
    void caseTMaior(TMaior node);
    void caseTMenor(TMenor node);
    void caseTIgual(TIgual node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTSum(TSum node);
    void caseTSub(TSub node);
    void caseTNao(TNao node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
