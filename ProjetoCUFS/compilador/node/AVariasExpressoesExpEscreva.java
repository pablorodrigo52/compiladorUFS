/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.Analysis;

@SuppressWarnings("nls")
public final class AVariasExpressoesExpEscreva extends PExpEscreva
{
    private PExpOuExplogica _expOuExplogica_;
    private PExpEscreva _expEscreva_;

    public AVariasExpressoesExpEscreva()
    {
        // Constructor
    }

    public AVariasExpressoesExpEscreva(
        @SuppressWarnings("hiding") PExpOuExplogica _expOuExplogica_,
        @SuppressWarnings("hiding") PExpEscreva _expEscreva_)
    {
        // Constructor
        setExpOuExplogica(_expOuExplogica_);

        setExpEscreva(_expEscreva_);

    }

    @Override
    public Object clone()
    {
        return new AVariasExpressoesExpEscreva(
            cloneNode(this._expOuExplogica_),
            cloneNode(this._expEscreva_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVariasExpressoesExpEscreva(this);
    }

    public PExpOuExplogica getExpOuExplogica()
    {
        return this._expOuExplogica_;
    }

    public void setExpOuExplogica(PExpOuExplogica node)
    {
        if(this._expOuExplogica_ != null)
        {
            this._expOuExplogica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expOuExplogica_ = node;
    }

    public PExpEscreva getExpEscreva()
    {
        return this._expEscreva_;
    }

    public void setExpEscreva(PExpEscreva node)
    {
        if(this._expEscreva_ != null)
        {
            this._expEscreva_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expEscreva_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expOuExplogica_)
            + toString(this._expEscreva_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expOuExplogica_ == child)
        {
            this._expOuExplogica_ = null;
            return;
        }

        if(this._expEscreva_ == child)
        {
            this._expEscreva_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expOuExplogica_ == oldChild)
        {
            setExpOuExplogica((PExpOuExplogica) newChild);
            return;
        }

        if(this._expEscreva_ == oldChild)
        {
            setExpEscreva((PExpEscreva) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
