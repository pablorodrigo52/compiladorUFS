/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AComandoEscrevaComando extends PComando
{
    private TEscreva _escreva_;
    private TAparentese _aparentese_;
    private PExpEscreva _expEscreva_;
    private TFparentese _fparentese_;
    private TPontoevirgula _pontoevirgula_;

    public AComandoEscrevaComando()
    {
        // Constructor
    }

    public AComandoEscrevaComando(
        @SuppressWarnings("hiding") TEscreva _escreva_,
        @SuppressWarnings("hiding") TAparentese _aparentese_,
        @SuppressWarnings("hiding") PExpEscreva _expEscreva_,
        @SuppressWarnings("hiding") TFparentese _fparentese_,
        @SuppressWarnings("hiding") TPontoevirgula _pontoevirgula_)
    {
        // Constructor
        setEscreva(_escreva_);

        setAparentese(_aparentese_);

        setExpEscreva(_expEscreva_);

        setFparentese(_fparentese_);

        setPontoevirgula(_pontoevirgula_);

    }

    @Override
    public Object clone()
    {
        return new AComandoEscrevaComando(
            cloneNode(this._escreva_),
            cloneNode(this._aparentese_),
            cloneNode(this._expEscreva_),
            cloneNode(this._fparentese_),
            cloneNode(this._pontoevirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoEscrevaComando(this);
    }

    public TEscreva getEscreva()
    {
        return this._escreva_;
    }

    public void setEscreva(TEscreva node)
    {
        if(this._escreva_ != null)
        {
            this._escreva_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._escreva_ = node;
    }

    public TAparentese getAparentese()
    {
        return this._aparentese_;
    }

    public void setAparentese(TAparentese node)
    {
        if(this._aparentese_ != null)
        {
            this._aparentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aparentese_ = node;
    }

    public PExpEscreva getExpEscreva()
    {
        return this._expEscreva_;
    }

    public void setExpEscreva(PExpEscreva node)
    {
        if(this._expEscreva_ != null)
        {
            this._expEscreva_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expEscreva_ = node;
    }

    public TFparentese getFparentese()
    {
        return this._fparentese_;
    }

    public void setFparentese(TFparentese node)
    {
        if(this._fparentese_ != null)
        {
            this._fparentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fparentese_ = node;
    }

    public TPontoevirgula getPontoevirgula()
    {
        return this._pontoevirgula_;
    }

    public void setPontoevirgula(TPontoevirgula node)
    {
        if(this._pontoevirgula_ != null)
        {
            this._pontoevirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoevirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._escreva_)
            + toString(this._aparentese_)
            + toString(this._expEscreva_)
            + toString(this._fparentese_)
            + toString(this._pontoevirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._escreva_ == child)
        {
            this._escreva_ = null;
            return;
        }

        if(this._aparentese_ == child)
        {
            this._aparentese_ = null;
            return;
        }

        if(this._expEscreva_ == child)
        {
            this._expEscreva_ = null;
            return;
        }

        if(this._fparentese_ == child)
        {
            this._fparentese_ = null;
            return;
        }

        if(this._pontoevirgula_ == child)
        {
            this._pontoevirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._escreva_ == oldChild)
        {
            setEscreva((TEscreva) newChild);
            return;
        }

        if(this._aparentese_ == oldChild)
        {
            setAparentese((TAparentese) newChild);
            return;
        }

        if(this._expEscreva_ == oldChild)
        {
            setExpEscreva((PExpEscreva) newChild);
            return;
        }

        if(this._fparentese_ == oldChild)
        {
            setFparentese((TFparentese) newChild);
            return;
        }

        if(this._pontoevirgula_ == oldChild)
        {
            setPontoevirgula((TPontoevirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
